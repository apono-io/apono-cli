/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the UserMfaEnrolledResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserMfaEnrolledResponse{}

// UserMfaEnrolledResponse struct for UserMfaEnrolledResponse
type UserMfaEnrolledResponse struct {
	IsMfaEnrolled bool `json:"is_mfa_enrolled"`
}

type _UserMfaEnrolledResponse UserMfaEnrolledResponse

// NewUserMfaEnrolledResponse instantiates a new UserMfaEnrolledResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMfaEnrolledResponse(isMfaEnrolled bool) *UserMfaEnrolledResponse {
	this := UserMfaEnrolledResponse{}
	this.IsMfaEnrolled = isMfaEnrolled
	return &this
}

// NewUserMfaEnrolledResponseWithDefaults instantiates a new UserMfaEnrolledResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMfaEnrolledResponseWithDefaults() *UserMfaEnrolledResponse {
	this := UserMfaEnrolledResponse{}
	return &this
}

// GetIsMfaEnrolled returns the IsMfaEnrolled field value
func (o *UserMfaEnrolledResponse) GetIsMfaEnrolled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMfaEnrolled
}

// GetIsMfaEnrolledOk returns a tuple with the IsMfaEnrolled field value
// and a boolean to check if the value has been set.
func (o *UserMfaEnrolledResponse) GetIsMfaEnrolledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMfaEnrolled, true
}

// SetIsMfaEnrolled sets field value
func (o *UserMfaEnrolledResponse) SetIsMfaEnrolled(v bool) {
	o.IsMfaEnrolled = v
}

func (o UserMfaEnrolledResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserMfaEnrolledResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_mfa_enrolled"] = o.IsMfaEnrolled
	return toSerialize, nil
}

func (o *UserMfaEnrolledResponse) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_mfa_enrolled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserMfaEnrolledResponse := _UserMfaEnrolledResponse{}

	err = json.Unmarshal(bytes, &varUserMfaEnrolledResponse)

	if err != nil {
		return err
	}

	*o = UserMfaEnrolledResponse(varUserMfaEnrolledResponse)

	return err
}

type NullableUserMfaEnrolledResponse struct {
	value *UserMfaEnrolledResponse
	isSet bool
}

func (v NullableUserMfaEnrolledResponse) Get() *UserMfaEnrolledResponse {
	return v.value
}

func (v *NullableUserMfaEnrolledResponse) Set(val *UserMfaEnrolledResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMfaEnrolledResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMfaEnrolledResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMfaEnrolledResponse(val *UserMfaEnrolledResponse) *NullableUserMfaEnrolledResponse {
	return &NullableUserMfaEnrolledResponse{value: val, isSet: true}
}

func (v NullableUserMfaEnrolledResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMfaEnrolledResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
