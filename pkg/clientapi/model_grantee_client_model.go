/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GranteeClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GranteeClientModel{}

// GranteeClientModel struct for GranteeClientModel
type GranteeClientModel struct {
	Id          string `json:"id"`
	SourceId    string `json:"source_id"`
	DisplayName string `json:"display_name"`
	Type        string `json:"type"`
}

type _GranteeClientModel GranteeClientModel

// NewGranteeClientModel instantiates a new GranteeClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGranteeClientModel(id string, sourceId string, displayName string, type_ string) *GranteeClientModel {
	this := GranteeClientModel{}
	this.Id = id
	this.SourceId = sourceId
	this.DisplayName = displayName
	this.Type = type_
	return &this
}

// NewGranteeClientModelWithDefaults instantiates a new GranteeClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGranteeClientModelWithDefaults() *GranteeClientModel {
	this := GranteeClientModel{}
	return &this
}

// GetId returns the Id field value
func (o *GranteeClientModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GranteeClientModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GranteeClientModel) SetId(v string) {
	o.Id = v
}

// GetSourceId returns the SourceId field value
func (o *GranteeClientModel) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *GranteeClientModel) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *GranteeClientModel) SetSourceId(v string) {
	o.SourceId = v
}

// GetDisplayName returns the DisplayName field value
func (o *GranteeClientModel) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *GranteeClientModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *GranteeClientModel) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetType returns the Type field value
func (o *GranteeClientModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GranteeClientModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GranteeClientModel) SetType(v string) {
	o.Type = v
}

func (o GranteeClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GranteeClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["source_id"] = o.SourceId
	toSerialize["display_name"] = o.DisplayName
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *GranteeClientModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"source_id",
		"display_name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGranteeClientModel := _GranteeClientModel{}

	err = json.Unmarshal(bytes, &varGranteeClientModel)

	if err != nil {
		return err
	}

	*o = GranteeClientModel(varGranteeClientModel)

	return err
}

type NullableGranteeClientModel struct {
	value *GranteeClientModel
	isSet bool
}

func (v NullableGranteeClientModel) Get() *GranteeClientModel {
	return v.value
}

func (v *NullableGranteeClientModel) Set(val *GranteeClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGranteeClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGranteeClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGranteeClientModel(val *GranteeClientModel) *NullableGranteeClientModel {
	return &NullableGranteeClientModel{value: val, isSet: true}
}

func (v NullableGranteeClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGranteeClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
