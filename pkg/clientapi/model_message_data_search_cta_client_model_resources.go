/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the MessageDataSearchCTAClientModelResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDataSearchCTAClientModelResources{}

// MessageDataSearchCTAClientModelResources struct for MessageDataSearchCTAClientModelResources
type MessageDataSearchCTAClientModelResources struct {
	Total   int32                 `json:"total"`
	HasMore bool                  `json:"has_more"`
	Data    []ResourceClientModel `json:"data"`
}

type _MessageDataSearchCTAClientModelResources MessageDataSearchCTAClientModelResources

// NewMessageDataSearchCTAClientModelResources instantiates a new MessageDataSearchCTAClientModelResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDataSearchCTAClientModelResources(total int32, hasMore bool, data []ResourceClientModel) *MessageDataSearchCTAClientModelResources {
	this := MessageDataSearchCTAClientModelResources{}
	this.Total = total
	this.HasMore = hasMore
	this.Data = data
	return &this
}

// NewMessageDataSearchCTAClientModelResourcesWithDefaults instantiates a new MessageDataSearchCTAClientModelResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDataSearchCTAClientModelResourcesWithDefaults() *MessageDataSearchCTAClientModelResources {
	this := MessageDataSearchCTAClientModelResources{}
	return &this
}

// GetTotal returns the Total field value
func (o *MessageDataSearchCTAClientModelResources) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelResources) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MessageDataSearchCTAClientModelResources) SetTotal(v int32) {
	o.Total = v
}

// GetHasMore returns the HasMore field value
func (o *MessageDataSearchCTAClientModelResources) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelResources) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *MessageDataSearchCTAClientModelResources) SetHasMore(v bool) {
	o.HasMore = v
}

// GetData returns the Data field value
func (o *MessageDataSearchCTAClientModelResources) GetData() []ResourceClientModel {
	if o == nil {
		var ret []ResourceClientModel
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelResources) GetDataOk() ([]ResourceClientModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MessageDataSearchCTAClientModelResources) SetData(v []ResourceClientModel) {
	o.Data = v
}

func (o MessageDataSearchCTAClientModelResources) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDataSearchCTAClientModelResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["has_more"] = o.HasMore
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *MessageDataSearchCTAClientModelResources) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total",
		"has_more",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageDataSearchCTAClientModelResources := _MessageDataSearchCTAClientModelResources{}

	err = json.Unmarshal(bytes, &varMessageDataSearchCTAClientModelResources)

	if err != nil {
		return err
	}

	*o = MessageDataSearchCTAClientModelResources(varMessageDataSearchCTAClientModelResources)

	return err
}

type NullableMessageDataSearchCTAClientModelResources struct {
	value *MessageDataSearchCTAClientModelResources
	isSet bool
}

func (v NullableMessageDataSearchCTAClientModelResources) Get() *MessageDataSearchCTAClientModelResources {
	return v.value
}

func (v *NullableMessageDataSearchCTAClientModelResources) Set(val *MessageDataSearchCTAClientModelResources) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDataSearchCTAClientModelResources) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDataSearchCTAClientModelResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDataSearchCTAClientModelResources(val *MessageDataSearchCTAClientModelResources) *NullableMessageDataSearchCTAClientModelResources {
	return &NullableMessageDataSearchCTAClientModelResources{value: val, isSet: true}
}

func (v NullableMessageDataSearchCTAClientModelResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDataSearchCTAClientModelResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
