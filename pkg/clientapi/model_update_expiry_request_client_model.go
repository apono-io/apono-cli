/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
)

// checks if the UpdateExpiryRequestClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateExpiryRequestClientModel{}

// UpdateExpiryRequestClientModel struct for UpdateExpiryRequestClientModel
type UpdateExpiryRequestClientModel struct {
	ExpiryDate NullableFloat64 `json:"expiry_date,omitempty"`
}

// NewUpdateExpiryRequestClientModel instantiates a new UpdateExpiryRequestClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateExpiryRequestClientModel() *UpdateExpiryRequestClientModel {
	this := UpdateExpiryRequestClientModel{}
	return &this
}

// NewUpdateExpiryRequestClientModelWithDefaults instantiates a new UpdateExpiryRequestClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateExpiryRequestClientModelWithDefaults() *UpdateExpiryRequestClientModel {
	this := UpdateExpiryRequestClientModel{}
	return &this
}

// GetExpiryDate returns the ExpiryDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateExpiryRequestClientModel) GetExpiryDate() float64 {
	if o == nil || IsNil(o.ExpiryDate.Get()) {
		var ret float64
		return ret
	}
	return *o.ExpiryDate.Get()
}

// GetExpiryDateOk returns a tuple with the ExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateExpiryRequestClientModel) GetExpiryDateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiryDate.Get(), o.ExpiryDate.IsSet()
}

// HasExpiryDate returns a boolean if a field has been set.
func (o *UpdateExpiryRequestClientModel) HasExpiryDate() bool {
	if o != nil && o.ExpiryDate.IsSet() {
		return true
	}

	return false
}

// SetExpiryDate gets a reference to the given NullableFloat64 and assigns it to the ExpiryDate field.
func (o *UpdateExpiryRequestClientModel) SetExpiryDate(v float64) {
	o.ExpiryDate.Set(&v)
}

// SetExpiryDateNil sets the value for ExpiryDate to be an explicit nil
func (o *UpdateExpiryRequestClientModel) SetExpiryDateNil() {
	o.ExpiryDate.Set(nil)
}

// UnsetExpiryDate ensures that no value is present for ExpiryDate, not even an explicit nil
func (o *UpdateExpiryRequestClientModel) UnsetExpiryDate() {
	o.ExpiryDate.Unset()
}

func (o UpdateExpiryRequestClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateExpiryRequestClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExpiryDate.IsSet() {
		toSerialize["expiry_date"] = o.ExpiryDate.Get()
	}
	return toSerialize, nil
}

type NullableUpdateExpiryRequestClientModel struct {
	value *UpdateExpiryRequestClientModel
	isSet bool
}

func (v NullableUpdateExpiryRequestClientModel) Get() *UpdateExpiryRequestClientModel {
	return v.value
}

func (v *NullableUpdateExpiryRequestClientModel) Set(val *UpdateExpiryRequestClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExpiryRequestClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExpiryRequestClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExpiryRequestClientModel(val *UpdateExpiryRequestClientModel) *NullableUpdateExpiryRequestClientModel {
	return &NullableUpdateExpiryRequestClientModel{value: val, isSet: true}
}

func (v NullableUpdateExpiryRequestClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExpiryRequestClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
