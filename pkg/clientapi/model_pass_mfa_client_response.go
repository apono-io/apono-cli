/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the PassMfaClientResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PassMfaClientResponse{}

// PassMfaClientResponse struct for PassMfaClientResponse
type PassMfaClientResponse struct {
	Message          string                      `json:"message"`
	AffectedRequests AccessRequestsAffectedByMfa `json:"affected_requests"`
}

type _PassMfaClientResponse PassMfaClientResponse

// NewPassMfaClientResponse instantiates a new PassMfaClientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPassMfaClientResponse(message string, affectedRequests AccessRequestsAffectedByMfa) *PassMfaClientResponse {
	this := PassMfaClientResponse{}
	this.Message = message
	this.AffectedRequests = affectedRequests
	return &this
}

// NewPassMfaClientResponseWithDefaults instantiates a new PassMfaClientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPassMfaClientResponseWithDefaults() *PassMfaClientResponse {
	this := PassMfaClientResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *PassMfaClientResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PassMfaClientResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PassMfaClientResponse) SetMessage(v string) {
	o.Message = v
}

// GetAffectedRequests returns the AffectedRequests field value
func (o *PassMfaClientResponse) GetAffectedRequests() AccessRequestsAffectedByMfa {
	if o == nil {
		var ret AccessRequestsAffectedByMfa
		return ret
	}

	return o.AffectedRequests
}

// GetAffectedRequestsOk returns a tuple with the AffectedRequests field value
// and a boolean to check if the value has been set.
func (o *PassMfaClientResponse) GetAffectedRequestsOk() (*AccessRequestsAffectedByMfa, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AffectedRequests, true
}

// SetAffectedRequests sets field value
func (o *PassMfaClientResponse) SetAffectedRequests(v AccessRequestsAffectedByMfa) {
	o.AffectedRequests = v
}

func (o PassMfaClientResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PassMfaClientResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["affected_requests"] = o.AffectedRequests
	return toSerialize, nil
}

func (o *PassMfaClientResponse) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"affected_requests",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPassMfaClientResponse := _PassMfaClientResponse{}

	err = json.Unmarshal(bytes, &varPassMfaClientResponse)

	if err != nil {
		return err
	}

	*o = PassMfaClientResponse(varPassMfaClientResponse)

	return err
}

type NullablePassMfaClientResponse struct {
	value *PassMfaClientResponse
	isSet bool
}

func (v NullablePassMfaClientResponse) Get() *PassMfaClientResponse {
	return v.value
}

func (v *NullablePassMfaClientResponse) Set(val *PassMfaClientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePassMfaClientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePassMfaClientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePassMfaClientResponse(val *PassMfaClientResponse) *NullablePassMfaClientResponse {
	return &NullablePassMfaClientResponse{value: val, isSet: true}
}

func (v NullablePassMfaClientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePassMfaClientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
