/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the MessageDataSearchCTAClientModelBundles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDataSearchCTAClientModelBundles{}

// MessageDataSearchCTAClientModelBundles struct for MessageDataSearchCTAClientModelBundles
type MessageDataSearchCTAClientModelBundles struct {
	Total   int32                    `json:"total"`
	HasMore bool                     `json:"has_more"`
	Data    []map[string]interface{} `json:"data"`
}

type _MessageDataSearchCTAClientModelBundles MessageDataSearchCTAClientModelBundles

// NewMessageDataSearchCTAClientModelBundles instantiates a new MessageDataSearchCTAClientModelBundles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDataSearchCTAClientModelBundles(total int32, hasMore bool, data []map[string]interface{}) *MessageDataSearchCTAClientModelBundles {
	this := MessageDataSearchCTAClientModelBundles{}
	this.Total = total
	this.HasMore = hasMore
	this.Data = data
	return &this
}

// NewMessageDataSearchCTAClientModelBundlesWithDefaults instantiates a new MessageDataSearchCTAClientModelBundles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDataSearchCTAClientModelBundlesWithDefaults() *MessageDataSearchCTAClientModelBundles {
	this := MessageDataSearchCTAClientModelBundles{}
	return &this
}

// GetTotal returns the Total field value
func (o *MessageDataSearchCTAClientModelBundles) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelBundles) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *MessageDataSearchCTAClientModelBundles) SetTotal(v int32) {
	o.Total = v
}

// GetHasMore returns the HasMore field value
func (o *MessageDataSearchCTAClientModelBundles) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelBundles) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *MessageDataSearchCTAClientModelBundles) SetHasMore(v bool) {
	o.HasMore = v
}

// GetData returns the Data field value
func (o *MessageDataSearchCTAClientModelBundles) GetData() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MessageDataSearchCTAClientModelBundles) GetDataOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *MessageDataSearchCTAClientModelBundles) SetData(v []map[string]interface{}) {
	o.Data = v
}

func (o MessageDataSearchCTAClientModelBundles) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDataSearchCTAClientModelBundles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total"] = o.Total
	toSerialize["has_more"] = o.HasMore
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

func (o *MessageDataSearchCTAClientModelBundles) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total",
		"has_more",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageDataSearchCTAClientModelBundles := _MessageDataSearchCTAClientModelBundles{}

	err = json.Unmarshal(bytes, &varMessageDataSearchCTAClientModelBundles)

	if err != nil {
		return err
	}

	*o = MessageDataSearchCTAClientModelBundles(varMessageDataSearchCTAClientModelBundles)

	return err
}

type NullableMessageDataSearchCTAClientModelBundles struct {
	value *MessageDataSearchCTAClientModelBundles
	isSet bool
}

func (v NullableMessageDataSearchCTAClientModelBundles) Get() *MessageDataSearchCTAClientModelBundles {
	return v.value
}

func (v *NullableMessageDataSearchCTAClientModelBundles) Set(val *MessageDataSearchCTAClientModelBundles) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDataSearchCTAClientModelBundles) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDataSearchCTAClientModelBundles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDataSearchCTAClientModelBundles(val *MessageDataSearchCTAClientModelBundles) *NullableMessageDataSearchCTAClientModelBundles {
	return &NullableMessageDataSearchCTAClientModelBundles{value: val, isSet: true}
}

func (v NullableMessageDataSearchCTAClientModelBundles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDataSearchCTAClientModelBundles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
