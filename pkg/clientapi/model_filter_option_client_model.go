/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientapi

import (
	"encoding/json"
	"fmt"
)

// checks if the FilterOptionClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterOptionClientModel{}

// FilterOptionClientModel struct for FilterOptionClientModel
type FilterOptionClientModel struct {
	Id          string                              `json:"id"`
	Type        string                              `json:"type"`
	SourceId    string                              `json:"source_id"`
	DisplayName string                              `json:"display_name"`
	Icon        NullableFilterOptionClientModelIcon `json:"icon,omitempty"`
}

type _FilterOptionClientModel FilterOptionClientModel

// NewFilterOptionClientModel instantiates a new FilterOptionClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterOptionClientModel(id string, type_ string, sourceId string, displayName string) *FilterOptionClientModel {
	this := FilterOptionClientModel{}
	this.Id = id
	this.Type = type_
	this.SourceId = sourceId
	this.DisplayName = displayName
	return &this
}

// NewFilterOptionClientModelWithDefaults instantiates a new FilterOptionClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterOptionClientModelWithDefaults() *FilterOptionClientModel {
	this := FilterOptionClientModel{}
	return &this
}

// GetId returns the Id field value
func (o *FilterOptionClientModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FilterOptionClientModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FilterOptionClientModel) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *FilterOptionClientModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FilterOptionClientModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FilterOptionClientModel) SetType(v string) {
	o.Type = v
}

// GetSourceId returns the SourceId field value
func (o *FilterOptionClientModel) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *FilterOptionClientModel) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *FilterOptionClientModel) SetSourceId(v string) {
	o.SourceId = v
}

// GetDisplayName returns the DisplayName field value
func (o *FilterOptionClientModel) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *FilterOptionClientModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *FilterOptionClientModel) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FilterOptionClientModel) GetIcon() FilterOptionClientModelIcon {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret FilterOptionClientModelIcon
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FilterOptionClientModel) GetIconOk() (*FilterOptionClientModelIcon, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *FilterOptionClientModel) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableFilterOptionClientModelIcon and assigns it to the Icon field.
func (o *FilterOptionClientModel) SetIcon(v FilterOptionClientModelIcon) {
	o.Icon.Set(&v)
}

// SetIconNil sets the value for Icon to be an explicit nil
func (o *FilterOptionClientModel) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *FilterOptionClientModel) UnsetIcon() {
	o.Icon.Unset()
}

func (o FilterOptionClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterOptionClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["source_id"] = o.SourceId
	toSerialize["display_name"] = o.DisplayName
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	return toSerialize, nil
}

func (o *FilterOptionClientModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"source_id",
		"display_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFilterOptionClientModel := _FilterOptionClientModel{}

	err = json.Unmarshal(bytes, &varFilterOptionClientModel)

	if err != nil {
		return err
	}

	*o = FilterOptionClientModel(varFilterOptionClientModel)

	return err
}

type NullableFilterOptionClientModel struct {
	value *FilterOptionClientModel
	isSet bool
}

func (v NullableFilterOptionClientModel) Get() *FilterOptionClientModel {
	return v.value
}

func (v *NullableFilterOptionClientModel) Set(val *FilterOptionClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterOptionClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterOptionClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterOptionClientModel(val *FilterOptionClientModel) *NullableFilterOptionClientModel {
	return &NullableFilterOptionClientModel{value: val, isSet: true}
}

func (v NullableFilterOptionClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterOptionClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
