project_name: apono-cli
before:
  hooks:
    - make manpage completions
    - go mod tidy

builds:
  - id: apono
    binary: apono
    main: ./cmd/apono
    env:
      - CGO_ENABLED=0
    goos:
      - windows
      - darwin
      - linux
      - openbsd
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    ignore:
      - goos: openbsd
        goarch: arm
      - goos: openbsd
        goarch: arm64
    flags:
      - -trimpath
    asmflags:
      - all=-trimpath={{ if index .Env "GITHUB_WORKSPACE"  }}{{.Env.GITHUB_WORKSPACE}}{{ else }}{{.Env.PWD}}{{ end }}
    gcflags:
      - all=-trimpath={{ if index .Env "GITHUB_WORKSPACE"  }}{{.Env.GITHUB_WORKSPACE}}{{ else }}{{.Env.PWD}}{{ end }}
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - id: windows
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE
      - contrib/completion/**/*
      - contrib/manpage/*

nfpms:
  - vendor: Apono
    homepage: https://www.apono.io/
    maintainer: Apono Support <support@apono.io>
    description: View, request and receive permissions to services, DBs and applications.
    license: Apache 2.0
    formats:
      - deb
      - rpm
    contents:
      # manpages
      - src: "./contrib/manpage/apono*.1"
        dst: "/usr/share/man/man1"
      # bash
      - src: "./contrib/completion/bash/apono"
        dst: "/usr/share/bash-completion/completions/exo"
      # zsh
      - src: "./contrib/completion/zsh/_apono"
        dst: "/usr/share/zsh/vendor-completions/_exo"

brews:
  - tap:
      owner: apono-io
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    folder: Formula
    homepage: "https://www.apono.io"
    description: "View, request and receive permissions to services, DBs and applications."
    license: "Apache-2.0"
    test: |
      system "#{bin}/apono version"
    install: |
      bin.install "apono" => "apono"
      man1.install Dir["contrib/manpage/apono*.1"]
      bash_completion.install "contrib/completion/bash/apono"
      zsh_completion.install "contrib/completion/zsh/_apono"

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

release:
  prerelease: auto
